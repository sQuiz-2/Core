name: "Publish on prod"

on:
  push:
    branches:
      - prod

jobs:
  publish-client-web:
    name: publish web client
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/client
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 3.x
          expo-cache: true
      - name: "Build"
        run: yarn build-web
        env:
          BACKEND_URL: "https://back.squiz.gg/"
          TWITCH_CLIENT_ID: "l6umf2uxaz2p2g10mvrfdf2kxdw27k"
      - name: netlify deploy
        run: npx netlify-cli deploy --prod --dir web-build --auth ${{ secrets.NETLIFY_AUTH_TOKEN_PROD }} --site ${{ secrets.NETLIFY_CLIENT_SITE_ID_PROD }}
  publish-docker-backend:
    name: Build and publish backend docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-
      - uses: docker/build-push-action@v2
        with:
          context: .
          file: ./packages/backend/Dockerfile
          push: true
          tags: ghcr.io/squiz-2/core/backend:latest